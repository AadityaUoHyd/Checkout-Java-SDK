// This class was generated on Wed, 22 Aug 2018 20:49:05 PDT by version 0.1.0-dev+904328-dirty of Braintree SDK Generator
// Order.java
// @version 0.1.0-dev+904328-dirty
// @type object
// @data 
// DO NOT EDIT
package com.paypal.orders;

import java.util.Map;
import java.util.HashMap;
import java.util.List;
import java.util.ArrayList;
import com.braintreepayments.http.annotations.*;
/**
 * The order details.
 */
@Model
public class Order {

    // Required default constructor
    public Order() {}

	/**
	* The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.<blockquote><strong>Note:</strong> The regular expression provides guidance but does not reject all invalid dates.</blockquote>
	*/
	@SerializedName("create_time")
	private String createTime;

	public String createTime() { return createTime; }
	
	public Order createTime(String createTime) {
	    this.createTime = createTime;
	    return this;
	}

	/**
	* The currency and amount for a financial transaction, such as a balance or payment due.
	*/
	@SerializedName("gross_amount")
	private Money grossAmount;

	public Money grossAmount() { return grossAmount; }
	
	public Order grossAmount(Money grossAmount) {
	    this.grossAmount = grossAmount;
	    return this;
	}

	/**
	* The ID of the order.
	*/
	@SerializedName("id")
	private String id;

	public String id() { return id; }
	
	public Order id(String id) {
	    this.id = id;
	    return this;
	}

	/**
	* The intent to either capture payment immediately or authorize a payment for an order after order creation.
	*/
	@SerializedName("intent")
	private String intent;

	public String intent() { return intent; }
	
	public Order intent(String intent) {
	    this.intent = intent;
	    return this;
	}

	/**
	* An array of request-related [HATEOAS links](/docs/api/overview/#hateoas-links). To complete payer approval, use the `approve` link with the `GET` method.
	*/
	@SerializedName(value = "links", listClass = LinkDescription.class)
	private List<LinkDescription> links;

	public List<LinkDescription> links() { return links; }
	
	public Order links(List<LinkDescription> links) {
	    this.links = links;
	    return this;
	}

	/**
	* The customer who approves and pays for the order. The customer is also known as the payer.
	*/
	@SerializedName("payer")
	private Customer payer;

	public Customer payer() { return payer; }
	
	public Order payer(Customer payer) {
	    this.payer = payer;
	    return this;
	}

	/**
	* An array of purchase units. Each purchase unit establishes a contract between a customer and merchant. Each purchase unit represents either a full or partial order that the customer intends to purchase from the merchant.
	*/
	@SerializedName(value = "purchase_units", listClass = PurchaseUnit.class)
	private List<PurchaseUnit> purchaseUnits;

	public List<PurchaseUnit> purchaseUnits() { return purchaseUnits; }
	
	public Order purchaseUnits(List<PurchaseUnit> purchaseUnits) {
	    this.purchaseUnits = purchaseUnits;
	    return this;
	}

	/**
	* The order status.
	*/
	@SerializedName("status")
	private String status;

	public String status() { return status; }
	
	public Order status(String status) {
	    this.status = status;
	    return this;
	}

	/**
	* The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.<blockquote><strong>Note:</strong> The regular expression provides guidance but does not reject all invalid dates.</blockquote>
	*/
	@SerializedName("update_time")
	private String updateTime;

	public String updateTime() { return updateTime; }
	
	public Order updateTime(String updateTime) {
	    this.updateTime = updateTime;
	    return this;
	}
}
