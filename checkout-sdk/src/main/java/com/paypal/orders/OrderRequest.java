// This class was generated on Tue, 04 Sep 2018 12:15:14 PDT by version 0.1.0-dev+904328-dirty of Braintree SDK Generator
// OrderRequest.java
// @version 0.1.0-dev+904328-dirty
// @type object
// @data 
// DO NOT EDIT
package com.paypal.orders;

import java.util.Map;
import java.util.HashMap;
import java.util.List;
import java.util.ArrayList;
import com.braintreepayments.http.annotations.*;
/**
 * The order request details.
 */
@Model
public class OrderRequest {

    // Required default constructor
    public OrderRequest() {}

	/**
	* Customizes the payer experience during the approval process for the payment with PayPal.
	*/
	@SerializedName("application_context")
	private ApplicationContext applicationContext;

	public ApplicationContext applicationContext() { return applicationContext; }
	
	public OrderRequest applicationContext(ApplicationContext applicationContext) {
	    this.applicationContext = applicationContext;
	    return this;
	}

	/**
	* REQUIRED
	* The intent to either capture payment immediately or authorize a payment for an order after order creation.
	*/
	@SerializedName("intent")
	private String intent;

	public String intent() { return intent; }
	
	public OrderRequest intent(String intent) {
	    this.intent = intent;
	    return this;
	}

	/**
	* The customer who approves and pays for the order. The customer is also known as the payer.
	*/
	@SerializedName("payer")
	private Customer payer;

	public Customer payer() { return payer; }
	
	public OrderRequest payer(Customer payer) {
	    this.payer = payer;
	    return this;
	}

	/**
	* REQUIRED
	* An array of purchase units. Each purchase unit establishes a contract between a customer and merchant. Each purchase unit represents either a full or partial order that the customer intends to purchase from the merchant.
	*/
	@SerializedName(value = "purchase_units", listClass = PurchaseUnitRequest.class)
	private List<PurchaseUnitRequest> purchaseUnits;

	public List<PurchaseUnitRequest> purchaseUnits() { return purchaseUnits; }
	
	public OrderRequest purchaseUnits(List<PurchaseUnitRequest> purchaseUnits) {
	    this.purchaseUnits = purchaseUnits;
	    return this;
	}
}
