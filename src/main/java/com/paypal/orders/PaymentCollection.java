// This class was generated on Fri, 20 Jul 2018 16:05:52 PDT by version 0.1.0-dev+0ee05a-dirty of Braintree SDK Generator
// PaymentCollection.java
// @version 0.1.0-dev+0ee05a-dirty
// @type object
// @data H4sIAAAAAAAC/+xdb28bN9J//3yKgfsATwzIUprEaetXjxs7V981iWE7PRS+QKZ2R1qeueSW5EpWD/3uB5K70v61nURy6nReBMFyuFrOcPjjDDkz/s/OxTLDnYOdU7ZMUVp4pYTAyHIldwY7vzDN2UTgW5a6PjuDnX/gcv1whCbSPPOdD3YuEoRo9TaoKWThN80AlAarmTTM08wApkoDgyzXUcIMQi65BS6BSVA6Rj2E10oD3rA0EzgAlttEaf47xpXfjFhmc11rYjIGjdNcxma4M9g51JotA39PBztnyOJ3Uix3DqZMGHQNv+VcY7xqONUqQ205mp2Dy5VkDouPs26hsCrZ1ETUItUFdiiBuRE6UXVw2CWjIRw2hBYxCQmbI/yOWjk5p0pj1881BPLy0wXyRklcdggiVbm0dQGUTR2akmuNMlr6OQv9CoanXDIZcSaqKjMAk0cJMAMMJkwwGaFjtmAO4hw3N+HGai5nbQbLIY8jFWONzyalze6lTTTiXpQwzSKLGk7O3+29ePbtd2tBuHc/PBnFKjIjLi3OtNebUcw1Rnak0dhR2XnPdTajXbAJs8BjlJZPORqwFdF+lESszhsCkbkQfwzulMqcibwujbKlLQVPGcAi4VECKZ8lFiZ48K/86dPnUS78/xieBA9PhxK8LFB77ShYc5wKfo1w9ffTX6+CEJhGkMqCXWY8YkIsYaqD7jAxDD86Kn+18Q2IMeIpE6s3ur918fao8i2TT2I+5zHGboQKbKJyw2RsE9P9uVHJoYM2N0+6ED7IPJ2gdjBQDiQTLMISAWoaMgCDCJevyrZXThE+Vm02oRkf7qEbkUZmcWx52lgvtfa2nsTMogcG12PgNobLE2lRS7R1mpNQyuyHJ4m1mTkYjaxSwgw52ulQ6dkosakY6Wn0/PnzH74xYWfa2x++3B3COUZKxsbP5WomFgkXWFEcMJVeKqtp00So6Pq3XFmszrKxWslZaHmrbKndo2o7XPjZn+WCuU0u02iM07pMK6dQBmY5jz3ETXILsULjNVvjvzGywIQALudM8NgLY6VuzQF9JiDec/3jTcaDyrXnuU2juX7Mc83j2vT6x/aMnrLlKRN7M5SomcUYTo48kjnMaxsmwwcaupwrHuG4yUK1uc1Kis7WknYvximXdVaKV4tnbrbP289cXkN1kC0uBZfXdRu0bOk3PTUKP0uXPx1eHL87PAf/SrmlsIyP1Bz1nONi9E3CLCpm9nyX3c2ZlL3gIiPfowYqq7au+Yo5cyaAm57CzrDK7dUpt6tNF42HFvZAqpdonNY4KBq63Cfn71gEy/QMLbw/+3kIFwpSdo3F6MNcOQNn4LpPuAyUFG2iYlhwmwRtvHx/dgIXmGbujb2AnRbjO+Hz5f53T3e9DgQnLNO4l2kVOdySMwfQkcjj8NGr/70awNWTq+B5Xe1ewcrANUOPfFeO1yvgwTK9xiWUWuZ4VdIZ796k8hrljJ1CBIHHwA9zE2jcxEnrmx9o4rw2tfSv2nqbBg6ct1LixmQJl2evX8Gzpy9erqdgsVisJ0BPI/fP9RjaG7s7LJb6pDDrnYQKxXgw/p1ONZgvmtqc/3RxcVqq4WqTtT3K+0AcaBS14YfnDvfMC9cP0G3ObvruXCj7P3z//crOeLFbujUG9RyN91RluV2wYvKcoueSpRM+y1VuxBLi2hQbTJm0PDIOl8s5d+YLwqUH/7NihKahQ0wyPzZmDJ9J7++P3Lt7JUvNx+GNY2N3GxvUeZRgytpzYcr29XSsmtozUsVp5+lvUPvX246aOCur4ygjjnmw/04spo1DnRatPvjNSvRQCHg3BfepjmEK8a6+s5Qt/bu9ySd7QewFQnsBp7mx4M1Mb3HPGJcmWJ/V/p+53TdZk8tbWJPLJmtFy2ZYUxJXh2XbY7FPv/yuwNsHhvX2bepV/8gylHE49mgMrUbY5tj6wHyq2cxB2xkaJfLCAF6PsJP8JWTIW5jBO5HiUIIjbAGDN+MY+B4bXhFvnHnUY2m1ray7bHxndUZKWryxeygjFXM5A7+UH+A4eMIl08vj4rO1wbdIXaa+tCjbww6b/ZtcWJ7lOlMGYXUc8oZxAcc3FqVxEAFP3py8Od6FU6YtvJN44Oz1lFk3d+t30Bg2Q/hRxRzNnUbNs6cv9ncfyDizTcva3m1Uf7J8LhbqALz2gRvWvSTxcjOS+HAPzJCqfnMSnreJXu8k9m+/SmJj+y1bNrf9rvtvGGP69C1jNjm3TNclXW1taJ4ClmViGfzpMFTwJ/0IjgsmIzT/B+/PTswAjPsJT3LPFT/c33kMH2bnyZyLr2XlzQanLeqX2B+znuFtd1wf7uunBCfjvO2tNAjks5DPQj4L+Szks5DPQj4L+Szks5DPQj4L+Sxb8ll6EYlb0YCkoqWNScEhceSNg8Q5CoEaTrWyfeHDxncZZ9UulbugDmoHBzhH4WOLV/1ATaeoMW5et4YwFGgNzN/IvSkCOxoXaRlbZkwMI5WOcjNa4IRlmRmlWTYyGOWa2+UojHNv/f3d7W/bMTdZbnEcMYszpVt2bhe5H/QiJYM7aNbRjJGaexmWwS2V0NsHQjpjmc3rfK2a6rycyJg7Vg0sErQJtkYM3AAKPuMTEcJzwpxVdGb4UKvz/lw57Q6kLx8slWdxZ9xmvZ1i+f68sXxV3XwVEiU6wnMDoa6elcZbIKSZe/E5yQqtH6NUBUpVoFQFSlWgVAXa8jZp1sTcTHJt0OHwOG0iYxe1Pd8+uXC9tBIUMSgJE0yYmJZhe2XY+IbNtYlSAlmHZ+X2ITGOVvt85YC5QbnLkl7fFHXs8W77niCkLK7ct8guMxV+cfAJ3NyKmOHJLfTw7JZvoSDrxiH8qnL3aadXPpa0PbByMH1h+PDPBCVI5TRY8Ijbjk6AN9xYM3A+JMuFdU7E/QZ4K2I3f8LPcj+TgcNbZ+EuZm9H9MeSKNLk+9GliRRQUGaJBOvHADNGRdxzuz5v2zKzlDdCeSOUN0J5I5Q3QnkjlDdCMVgUg0UxWBSDRTFYFINFMVgUg0UxWBSDRTFYFINFeSPks5DPQj4L+Szks5DPQj4L+Szks5DPQj4L5Y1Q3gjljVDeyFbyRkp9gjOMkM8dX/CjRnYdq0X/UtCrzuNJpXNrUfT064hiRcu4cAug7FbeJG86NGmttMc3jvMZwhmz2FVXOpDHOpCrVaXrlDY7ZQ9wPYKyxmhRp1wWN+ZFGL9VTqvnqC1MtUr9Xr2KYbYKmFReUT4pTv2TlqxRuY5wXH6wPqst2iOM3v8MG9qfiHWLpk37S4nmYzIbihixdVaLXwpDOP4t53MmMCwLtxJ8zk6BA0H31nwV/pcN+2eZ+KD0Ki/ADyDYhu63rIJv9yHmM25NaVhqn1ZRfGCVT6D4hgIgazjbnQg008qYcUc6UINASUGUFERJQV9tUlAPOki0XdhQayZkIGQgZPirIUPw98dTxMapU6WZkIGQgZDhq0WGU8HsVOkUXmPH6UVWUB0WNI5+G5T+87ayZ1j02kqnEIjGJ/Ck3Cfihr+tOdHqGjWboacX89VKNLvzMIcKLRA+Ej4SPm7GcipPtn9kBjstqLbx1GM3hdPpdV2kMt0WFomCcMZdqHnIznfwMc3FlAsRmou/KVxN1fW5uMIouJZqIR2IuI5+DNtHDUwZF2MWxxpNfXdoUtrC4D4CgAUl9onf/h0o3vn8ig/vM7AKXr6o5GR65WZCqAXGMMGp/xPDMoZn+/t9vdjUFhcszQz4/29lv4PhMzmEn9QC56gH/q2QFO6WLIsizNw2lrIbnuYpCJQzm4SFIOvcu1l9tv+ilU5aXAfDHHWJiczXLsilF1J831EWVQK+bB2LUoebWer19r58e6/kGk6OStB1KwFSZq4xdgIyxV/vtus3WBT5zbgAJaeCMi5u/XKDqwgAHXtDhWMh9uZ7BjT6L0zEElBGeukn1m/3kGmVaY6W6SXMHcPSnw07+Hj+zL2bm5AY6sOIytRQk4tNnRbfw++rXKh1mDZdVLJyyMohK+crs3K2VvlxS5fuDYU+Dx87CmZV39DH8YreZKFC6rfWengpWN0+aGlkphErtGrqysFwJFgky9tG7bahq9Pjt0cnb/925WD46uj47cnx0dWDFRSl0pxfU2nOM3QeS5fuek+mobxl2201eYIH9BnVOIufoKMhMprIaCKjiWpw0t7256oMGDaox14PMHDjT0S2wA5V/KOKf1Txjyr+UcU/qvhHFf+oegZVz6DqGVQ9g6pnUPUMqp5B1TOoegZVz6DqGVQ9gyr+kc9CPgv5LOSzkM9CPgv5LOSzkM9CPgv5LFTxb5sV//qGJ5XFsVVjn57ShIsapTd6d6shIquEtlO2vGedtiz0vL1IW1enNoetwmyb4fGSKiRRyCaFbFLIJlVIImQgZCBk+GhkeIsWDsMaXhlEPX7XGhZ6LKKeDv1e2doq8uq1LhHgHOaysOUZ2lxLH66NsrZK6rYUcAMx90WhZVEPtqtzIyd6kaDGelmCRInYL0eu4WGSaYoithh3oXEHkTCZMJkw+avFZCqtTaW1qbQ2ldb+kqW1y2OtDoOkRSJzhMwRMke+4iIpVEaXsIGwgbDhUZXRvfU2kQqiEAgSCBIIUq1cqpVLtXKpVi7Vym2dKSrLxDgYT90XU309yNoha4esHaqZ+yk1cx9zqdwiDOFRFMgtxpoUxmC9KO7rw5Ofj4+uNsQJ1cb9C9XG/fDH//wXAAD//w==
// DO NOT EDIT
package com.paypal.orders;

import java.util.Map;
import java.util.HashMap;
import java.util.List;
import java.util.ArrayList;
import com.braintreepayments.http.annotations.*;
/**
 * The collection of payments, or transactions, for a purchase unit in an order. For example, authorized payments, captured payments, and refunds.
 */
@Model
public class PaymentCollection {

    // Required default constructor
    public PaymentCollection() {}

	/**
	* An array of authorized payments for a purchase unit. A purchase unit can have zero or more authorized payments.
	*/
	@SerializedName(value = "authorizations", listClass = Authorization.class)
	private List<Authorization> authorizations;

	public List<Authorization> authorizations() { return authorizations; }
	
	public PaymentCollection authorizations(List<Authorization> authorizations) {
	    this.authorizations = authorizations;
	    return this;
	}

	/**
	* An array of captured payments for a purchase unit. A purchase unit can have zero or more captured payments.
	*/
	@SerializedName(value = "captures", listClass = Capture.class)
	private List<Capture> captures;

	public List<Capture> captures() { return captures; }
	
	public PaymentCollection captures(List<Capture> captures) {
	    this.captures = captures;
	    return this;
	}

	/**
	* An array of refunds for a purchase unit. A purchase unit can have zero or more refunds.
	*/
	@SerializedName(value = "refunds", listClass = Refund.class)
	private List<Refund> refunds;

	public List<Refund> refunds() { return refunds; }
	
	public PaymentCollection refunds(List<Refund> refunds) {
	    this.refunds = refunds;
	    return this;
	}
}
